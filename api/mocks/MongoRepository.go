// Code generated by mockery v2.10.0. DO NOT EDIT.

package mocks

import (
	context "context"

	models "github.com/s3f4/ginterview/api/models"
	mock "github.com/stretchr/testify/mock"
)

// MongoRepository is an autogenerated mock type for the MongoRepository type
type MongoRepository struct {
	mock.Mock
}

// List provides a mock function with given fields: _a0, _a1
func (_m *MongoRepository) List(_a0 context.Context, _a1 *models.MongoRequest) ([]*models.Record, error) {
	ret := _m.Called(_a0, _a1)

	var r0 []*models.Record
	if rf, ok := ret.Get(0).(func(context.Context, *models.MongoRequest) []*models.Record); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]*models.Record)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *models.MongoRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
